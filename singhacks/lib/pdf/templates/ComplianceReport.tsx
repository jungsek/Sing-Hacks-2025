import React from 'react';
import { Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer';

export type ComplianceReportProps = {
  title?: string;
  generatedOn?: string; // e.g. '01 Nov 2025, 14:43 SGT'
  generatedBy?: string; // e.g. 'Cheong Zhi Xun, Compliance Officer'
  items?: string[];
  logoDataUri?: string;
  // New client fields
  clientName?: string;
  clientId?: string;
  jurisdiction?: string;
  regulator?: string;
  customerRiskRating?: string;
  pepStatus?: string;
  lastKycCompleted?: string;
  eddRequired?: string | boolean;
};

const COLORS = {
  body: '#1A1A1A',
  header: '#1976D2',
  lightGray: '#F2F2F2',
};

const styles = StyleSheet.create({
  page: {
    paddingTop: 72,
    paddingBottom: 56,
    paddingHorizontal: 72, // ~1 inch margins on A4
    fontFamily: 'Helvetica',
    color: COLORS.body,
    fontSize: 11,
  } as any,
  headerRow: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginBottom: 12,
  } as any,
  logoBox: {
    width: 50,
    height: 50,
    backgroundColor: COLORS.lightGray,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 8,
  } as any,
  generatedBy: { fontSize: 9, color: '#555555' } as any,

  title: { textAlign: 'center', fontSize: 20, fontWeight: 'bold', color: COLORS.body, marginTop: 6 } as any,
  subtitle: { textAlign: 'center', fontSize: 11, color: '#555555', marginTop: 4 } as any,

  listItem: { marginBottom: 6 } as any,
});

export default function ComplianceReport({
  title = 'DOCUMENT & TRANSACTION RISK ANALYSIS REPORT',
  generatedOn = '',
  generatedBy = '',
  items = [],
  logoDataUri,
  clientName = '',
  clientId = '',
  jurisdiction = '',
  regulator = '',
  customerRiskRating = '',
  pepStatus = '',
  lastKycCompleted = '',
  eddRequired = '',
}: ComplianceReportProps) {
  return (
    <Document>
      <Page size="A4" style={styles.page}>
        {/* Header area */}
        <View style={styles.headerRow} fixed>
          <View style={{ flexDirection: 'row', alignItems: 'center' }}>
            {typeof logoDataUri === 'string' && logoDataUri ? (
              <Image src={logoDataUri} style={{ width: 50, height: 50, marginRight: 8 }} />
            ) : (
              <View style={styles.logoBox}>
                <Text style={{ fontSize: 8, color: COLORS.body }}>JULIUS BAER</Text>
              </View>
            )}
          </View>

          <View>
            <Text style={{ fontSize: 9, textAlign: 'right', color: '#555555' }}>
              Generated by Agentic AML System
            </Text>
          </View>
        </View>

        {/* Title and subtitle centered */}
        <Text style={styles.title}>{title}</Text>
        <Text style={styles.subtitle}>
          {generatedOn ? `Generated on: ${generatedOn}` : ''}
          {generatedOn && generatedBy ? ' | ' : ''}
          {generatedBy ? `Generated by: ${generatedBy}` : ''}
        </Text>

        {/* Client details box */}
        <View style={{ marginTop: 18, padding: 10, borderWidth: 1, borderColor: COLORS.lightGray }}>
          <Text style={{ fontSize: 12, fontWeight: 'bold', marginBottom: 6 }}>Client Details</Text>

          <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>
            <View style={{ width: '48%' }}>
              <Text>Client Name: {clientName || '-'}</Text>
              <Text>Client ID: {clientId || '-'}</Text>
              <Text>Jurisdiction: {jurisdiction || '-'}</Text>
              <Text>Regulator: {regulator || '-'}</Text>
            </View>

            <View style={{ width: '48%' }}>
              <Text>Customer Risk Rating: {customerRiskRating || '-'}</Text>
              <Text>PEP Status: {pepStatus || '-'}</Text>
              <Text>Last KYC Completed: {lastKycCompleted || '-'}</Text>
              <Text>EDD Required: {typeof eddRequired === 'boolean' ? (eddRequired ? 'Yes' : 'No') : (eddRequired || '-')}</Text>
            </View>
          </View>
        </View>

        {/* Simple body: items if provided */}
        <View style={{ marginTop: 16 }}>
          {items.map((it, i) => (
            <Text key={i} style={styles.listItem}>
              {i + 1}. {it}
            </Text>
          ))}
        </View>
      </Page>
    </Document>
  );
}
